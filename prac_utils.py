#
# Copyright 2023 David Haasler
#
# This file contains code generated by D. Haasler 
#
# Version: june 29, 2023 @14:00
#
# SPDX-License-Identifier: GPL-3.0+
#

from astropy.table import Table
from astropy.io import fits
from astropy.nddata import CCDData
from astropy.stats import sigma_clipped_stats
import astropy.units as u
import matplotlib.axes as maxes
import matplotlib.patches as patches
import matplotlib.pyplot as plt
from mpl_toolkits.axes_grid1 import make_axes_locatable
import numpy as np


def find_nearest_idx(array, value):
    """Find the nearest index to a certain value in an array

    Parameters
    ----------
    array : numpy array
        Array from which to select the nearest index
    value : float
        Value to use

    Return
    ------
    idx : integer
        Index of the array whose value is the closest to the input value

    """

    array = np.asarray(array)
    idx = (np.abs(array - value)).argmin()

    return idx


def x2freq(ccd):
    """Convert the X-axis from index values to frequency

    Reads the CDELT, calculates the minimum and maximum values of the spectrum and calculates the 
    conversion using a fixed frequency width for each channel using linspace.
    Faster and preferred method compared to x2freq2.

    Parameters
    ----------
    ccd : astropy.nddata.ccddata.CCDData
        CCD Data object to analize.

    Return
    ------
    freq : numpy array
        Array of frequency values for the X-axis

    """

    # FITS data
    array_length = ccd.header['NAXIS1']
    cdelt = ccd.header['CDELT1']    # in Hz   
    rest_freq = ccd.header['RESTFREQ']    # in Hz
    rest_index = ccd.header['CRPIX1']
    rest_index = rest_index-1    # convert first index from CLASS (1) to python (0)
    # Unlike x2freq2, this function does not need to calculate a rest frequency for an integer central index.

    first_freq = rest_freq - (cdelt * rest_index)
    last_freq = rest_freq + (cdelt * (array_length-1 - rest_index))
    freq = np.linspace(first_freq, last_freq, array_length)
    
    return freq


def x2freq2(ccd):
    """Convert the X-axis from index values to frequency

    Reads the CDELT, and converts each index value to frequency individually.
    This version is slow and x2freq is preferred.

    Parameters
    ----------
    ccd : astropy.nddata.ccddata.CCDData
        CCD Data object to analize.

    Return
    ------
    freq : numpy array
        Array of frequency values for the X-axis

    """

    # FITS data
    array_length = ccd.header['NAXIS1']
    cdelt = ccd.header['CDELT1']    # in Hz   
    rest_freq = ccd.header['RESTFREQ']    # in Hz
    rest_index = ccd.header['CRPIX1']
    rest_index = rest_index-1    # convert first index from CLASS (1) to python (0)
    # Central index is not integer. This calculates the frequency value for the nearest integer index.
    # This is needed to index an array at integer values.
    new_rest_index_int = round(rest_index)
    new_rest_freq_int = rest_freq + ((new_rest_index_int - rest_index) * cdelt)

    # Create array for freq in Hz and fill with values set from above
    freq = np.zeros(array_length)
    freq[new_rest_index_int] = new_rest_freq_int
    for i in range(new_rest_index_int+1, array_length, 1):
        freq[i] = freq[i-1]+cdelt
    for i in range(new_rest_index_int-1, -1, -1):
        freq[i] = freq[i+1]-cdelt
    
    return freq